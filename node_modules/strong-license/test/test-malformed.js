var License = require('../');
var test = require('tap').test;
var now = new Date();

test('missing product and features', function(t) {
  var blank = new License({});
  blank.details = {};
  var malformed = new License(blank.export());
  validateLicenseDetails(t, malformed);
  t.end();
});

test('true product and features', function(t) {
  var blank = new License({});
  blank.details.product = true;
  blank.details.features = true;
  var malformed = new License(blank.export());
  validateLicenseDetails(t, malformed);
  t.end();
});

test('Date product and features', function(t) {
  var blank = new License({});
  blank.details.product = new Date();
  blank.details.features = new Date();
  var malformed = new License(blank.export());
  validateLicenseDetails(t, malformed);
  t.end();
});

test('object product and features', function(t) {
  var blank = new License({});
  blank.details.product = {};
  blank.details.features = {};
  var malformed = new License(blank.export());
  validateLicenseDetails(t, malformed);
  t.end();
});

test('array product and features', function(t) {
  var blank = new License({});
  blank.details.product = [];
  blank.details.features = [];
  var malformed = new License(blank.export());
  validateLicenseDetails(t, malformed);
  t.end();
});

function validateLicenseDetails(t, lic) {
  if (lic.details.product === null) {
    t.type(lic.details.product, 'null',
           'product is always a string or null');
  } else {
    t.type(lic.details.product, 'string',
           'product is always a string or null');
  }
  t.type(lic.details.features, Array,
         'features is always an Array');
  t.type(lic.details.activationDate, Date,
         'start date is a Date');
  t.type(lic.details.expirationDate, Date,
         'end date is a Date');
  t.assert(!lic.covers('prod', 'feature', now),
           'license does not cover prod:feature now');
  t.assert(!lic.covers('prod', 'feature'),
           'license does not cover prod.feature now');
  t.assert(!lic.covers('prod'),
           'license is not a generally valid license');
}
